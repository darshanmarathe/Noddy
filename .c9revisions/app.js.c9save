{"ts":1381385785778,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express');\nvar http = require('http');\nvar path = require('path');\n\nvar passport =  require('passport');\nvar passportConfig = require('./modules/mod_passport')\n/*\nRoute dependencies\n*/\n\nvar routes_index = require('./routes/index');\nvar routes_user = require('./routes/user');\nvar routes_members = require('./routes/members');\n\n\n\nvar app = express();\n\n// all environments\napp.set('port', process.env.PORT || 3000);\napp.set('views', __dirname + '/views');\n\n//Changed the default view engine to handlebar\n//app.set('view engine', 'jade');\napp.set('view engine', 'html');\napp.engine('html', require('hbs').__express);\n\napp.use(express.cookieParser());\napp.use(express.session({ secret: 'keyboard cat' }));\napp.use(passport.initialize());\napp.use(passport.session());\n\napp.use(express.favicon());\napp.use(express.logger('dev'));\napp.use(express.bodyParser());\napp.use(express.methodOverride());\napp.use(app.router);\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/public', express.static(__dirname + '/public'));\n// development only\nif ('development' == app.get('env')) {\n  app.use(express.errorHandler());\n}\n\n\n\nDefineRoughts(app , routes_index);\nDefineRoughts(app , routes_user);\nDefineRoughts(app , routes_members);\n\napp.use(function(req, res, next){\n  res.status(404);\n\n  // respond with html page\n  if (req.accepts('html')) {\n    res.render('404', { url: req.url });\n    return;\n  }\n\n  // respond with json\n  if (req.accepts('json')) {\n    res.send({ error: 'Not found' });\n    return;\n  }\n\n  // default to plain-text. send()\n  res.type('txt').send('Not found');\n})\n\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});\n\nfunction DefineRoughts (app , routes) {\n\troutes.define(app , routes);\n}"]],"start1":0,"start2":0,"length1":0,"length2":1848}]],"length":1848}
{"contributors":[],"silentsave":false,"ts":1381400751920,"patch":[[{"diffs":[[1,"console.log(\"Test\")"],[0,"\n/**\n * "]],"start1":0,"start2":0,"length1":8,"length2":27}]],"length":1867,"saved":false}
{"ts":1381400911994,"patch":[[{"diffs":[[-1,"console.log(\"Test\")"],[0,"\n/**"]],"start1":0,"start2":0,"length1":23,"length2":4}]],"length":1848,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381728163222,"patch":[[{"diffs":[[0,"'path');"],[1,"\nvar MongoStore = require('connect-mongo')(express);"],[0,"\n\nvar pa"]],"start1":115,"start2":115,"length1":16,"length2":68},{"diffs":[[0,"ession({"],[1,"\n   "],[0," secret:"]],"start1":774,"start2":774,"length1":16,"length2":20},{"diffs":[[0,"ard cat'"],[1," ,\n    store: new MongoStore({\n      url : 'mongodb://sa:ds@ds053497.mongolab.com:53497/noddydb'\n    })\n  }));\napp.use(express.session({ secret:"],[0," }));\nap"]],"start1":801,"start2":801,"length1":16,"length2":160}]],"length":2048,"saved":false}
{"ts":1381728181293,"patch":[[{"diffs":[[0,"  })\n  }));\n"],[1,"//"],[0,"app.use(expr"]],"start1":908,"start2":908,"length1":24,"length2":26}]],"length":2050,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381731583007,"patch":[[{"diffs":[[0,"xpress);"],[1,"\napp.use(express.static(path.join(__dirname, '/public')));"],[0,"\n\napp.us"]],"start1":714,"start2":714,"length1":16,"length2":74},{"diffs":[[0,"r);\n"],[-1,"app.use(express.static(path.join(__dirname, 'public')));\n"],[0,"app."]],"start1":1224,"start2":1224,"length1":65,"length2":8}]],"length":2051,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381829146522,"patch":[[{"diffs":[[0," || "],[-1,"3000"],[1,"16001"],[0,");\na"]],"start1":512,"start2":512,"length1":12,"length2":13}]],"length":2052,"saved":false}
{"ts":1381829164205,"patch":[[{"diffs":[[0," || "],[-1,"16"],[1,"30"],[0,"00"],[-1,"1"],[0,");\na"]],"start1":512,"start2":512,"length1":13,"length2":12}]],"length":2051,"saved":false}
